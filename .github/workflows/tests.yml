name: CI

on:
  push:
  pull_request:

jobs:
  tests:
    name: Tests (PHPUnit with PHP ${{ matrix.php }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        operating-system: ["ubuntu-latest"]
        php: ["7.4", "8.0", "8.1", "8.2", "8.3", "8.4", "8.5"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php }}
          tools: phpunit
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          coverage: xdebug

      # Install composer dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: "Install Composer dependencies"
        uses: "ramsey/composer-install@v2"

      - name: Run tests
        run: vendor/bin/phpunit --no-coverage

  # This does not work
  # behat:
  #   name: Tests (Behat with PHP ${{ matrix.php }})
  #   runs-on: ubuntu-latest

  #   services:
  #     redmine-60005:
  #       image: redmine:6.0.5
  #       ports:
  #           - "5060:3000"
  #       env:
  #           # Workaround: Remove secret for Rails 7.2 so it will be generated automatically
  #           # @see https://github.com/docker-library/redmine/issues/349#issuecomment-2516634932
  #           # REDMINE_SECRET_KEY_BASE: supersecretkey
  #           REDMINE_PLUGINS_MIGRATE: true
  #       volumes:
  #           - /home/runner/work/_temp/redmine-60005_data/files:/usr/src/redmine/files
  #           - /home/runner/work/_temp/redmine-60005_data/sqlite:/usr/src/redmine/sqlite
  #       options: --health-cmd="wget -O /dev/null http://localhost:3000" --health-start-period=30s --health-interval=30s --health-timeout=30s --health-retries=3

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       operating-system: ["ubuntu-latest"]
  #       php: ["8.3"]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 2

  #     - name: Setup PHP, with composer and extensions
  #       uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
  #       with:
  #         php-version: ${{ matrix.php }}
  #         tools: phpunit
  #         extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
  #         coverage: xdebug

  #     # Install composer dependencies and handle caching in one go.
  #     # @link https://github.com/marketplace/actions/install-composer-dependencies
  #     - name: "Install Composer dependencies"
  #       uses: "ramsey/composer-install@v2"

  #     - name: Run behat
  #       run: vendor/bin/behat --config tests/Behat/behat.yml --profile=github-actions --suite=redmine_60005

  code-quality:
    name: Check ${{ matrix.tool }} (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        operating-system: ["ubuntu-latest"]
        php: ["8.3"]
        tool: ["phpstan", "code-coverage", "code-style"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php }}
          tools: phpunit
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          coverage: xdebug

      # Install composer dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: "Install Composer dependencies"
        uses: "ramsey/composer-install@v2"

      - name: Run static code analysis
        if: ${{ matrix.tool == 'phpstan' }}
        run: composer run phpstan -- --error-format=github

      - name: Run tests with coverage-clover
        if: ${{ matrix.tool == 'code-coverage' }}
        run: composer run phpunit -- --coverage-clover .phpunit.cache/clover.xml

      - name: Upload coverage reports to Codecov
        if: ${{ matrix.tool == 'code-coverage' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./.phpunit.cache/clover.xml
          fail_ci_if_error: true
          verbose: true

      - name: Check code-style
        if: ${{ matrix.tool == 'code-style' }}
        run: composer run codestyle -- --dry-run --diff
